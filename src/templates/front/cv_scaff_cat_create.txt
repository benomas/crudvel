<template>
  <div class="cv-create" :class="{'q-pa-md':cGtxs,'q-pa-xs':cLtsm}">
    <cv-action-container
      v-if="cpStaGenAction"
      v-bind="mCustomBindins('cv-action-container')"
      v-on="mCustomOns('cv-action-container')">
      <div slot="cv-title-slot" class="row action-label">
        <div class="col-xs-10 col-sm-9 col-md-8  q-pb-md">
          <label>
            <span class="q-headline txt-secondary f-bold">
              {{cpStaGenAction.label}}
            </span>
          </label>
        </div>
      </div>

      <div slot="cv-content-slot">
        <div class="row w-100">
          <cv-<##[plural|slug](resource)##>-skeleton
            v-if="cActionReady"
            v-bind="mCustomBindins('cv-<##[plural|slug](resource)##>-skeleton')"
            v-on="mCustomOns('cv-<##[plural|slug](resource)##>-skeleton')"
            :cv-segment="'*'"
            >
          </cv-<##[plural|slug](resource)##>-skeleton>

          <q-expansion-item
            v-if="cpDinGenKeyValue && cdRow && cdRow.cv_has_files"
            v-cv-can-access="`special:${cResourceName}.index-files`"
            class="w-100 ba-1px border-black-l-72 q-ma-sm rounded-borders"
            :header-class="'w-100 txt-secondary'"
            icon="fas fa-filter"
            :label="mrLang('actions.indexResourcer.label','catFiles')"
          >
            <div class="w-100" >
              <cv-index-resoucer
                :cv-resourcer="cResource"
                :cv-file-count="cdRow.cv_has_files"
                :cv-resourcer-action="cpStaGenAction"
                :cv-resourcer-key="cpDinGenKeyValue">
              </cv-index-resoucer>
            </div>
          </q-expansion-item>
        </div>
      </div>

      <div slot="cv-buttons-slot">
        <div class="col-xs-12 ">
          <cv-action-buttons
            v-bind="mCustomBindins('cv-action-buttons')"
            v-on="mCustomOns('cv-action-buttons')"
            :cv-sta-ins-action="cpStaGenAction"
            >
          </cv-action-buttons>
        </div>
      </div>
    </cv-action-container>
  </div>
</template>
<script>
import VueMirroring             from 'crudvuel/mirroring/VueMirroring'
import CvCreate                 from 'cq-crudvuel/resource/CvCreate'
import CvSkeletonController     from 'cq-crudvuel/resource/CvSkeletonController'
import Cv<##[plural|studly](resource)##>Skeleton from 'components/resources/<##[plural|slug](resource)##>/Cv<##[plural|studly](resource)##>Skeleton'
import CvIndexResoucer          from 'components/resources/cat-files/CvIndexResoucer'

let vueMirroring = new VueMirroring('Create').enableRoot()

export default {
  mixins: [
    CvCreate,
    vueMirroring.restoreBindins(CvCreate).assimilate(
      {Cv<##[plural|studly](resource)##>Skeleton}
    ),
    CvSkeletonController
  ],

  components: {
    Cv<##[plural|studly](resource)##>Skeleton,
    CvIndexResoucer
  }
}
</script>
