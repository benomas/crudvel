<template>
  <div class="q-pa-md cv-create">
    <cv-action-container
      v-if="cpStaGenAction"
      v-bind="mCustomBindins('cv-action-container')"
      v-on="mCustomOns('cv-action-container')">
      <div slot="cv-title-slot" class="row action-label">
        <div class="col-xs-10 col-sm-9 col-md-8  q-pb-md">
          <label>
            <span class="q-headline txt-secondary f-bold">
              {{cpStaGenAction.label}}
            </span>
          </label>
        </div>
      </div>
      <div slot="cv-content-slot">
        <div class="row w-100">
          <cv-<##[plural|slug](resource)##>-skeleton
            v-bind="mCustomBindins('cv-<##[plural|slug](resource)##>-skeleton')"
            v-on="mCustomOns('cv-<##[plural|slug](resource)##>-skeleton')"
            :cv-segment="'*'"
            >
          </cv-<##[plural|slug](resource)##>-skeleton>
        </div>
      </div>
      <div slot="cv-buttons-slot">
        <div class="col-xs-12 ">
          <cv-action-buttons
            v-bind="mCustomBindins('cv-action-buttons')"
            v-on="mCustomOns('cv-action-buttons')"
            :cv-sta-ins-action="cpStaGenAction"
            >
          </cv-action-buttons>
        </div>
      </div>
    </cv-action-container>
  </div>
</template>
<script>
import CvCreate                 from 'cq-crudvuel/resource/CvCreate'
import Cv<##[plural|studly](resource)##>Skeleton     from 'src/components/resources/<##[plural|slug](resource)##>/Cv<##[plural|studly](resource)##>Skeleton'
import CvSkeletonController     from 'cq-crudvuel/resource/CvSkeletonController'
import VueMirroring             from 'crudvuel/mirroring/VueMirroring'
let vueMirroring = new VueMirroring('Create').enableRoot()
export default {
  mixins: [
    CvCreate,
    vueMirroring.restoreBindins(CvCreate).assimilate(
      {Cv<##[plural|studly](resource)##>Skeleton}
    ),
    CvSkeletonController
  ],

  components: {
    Cv<##[plural|studly](resource)##>Skeleton
  }
}
</script>
